{"version":3,"sources":["components/Navigation.tsx","components/PeoplePage.tsx","components/api.tsx","components/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["Navigation","className","to","isActive","PeopleTable","useState","peopleList","getPeople","selectedPerson","getSelectedPerson","selectedPeople","getSelectedPeople","deletedPerson","getDeletedPerson","movedPerson","getMovedPerson","moveDirection","getMoveDirection","useEffect","setTimeout","fetch","then","response","json","people","addPerson","includes","currentSelectedPeople","removedPerson","filter","person","slug","personsToDelete","personToMoveIndex","findIndex","newPeople","personToMove","slice","splice","concat","length","title","map","isPersonSelected","selectedPersonClasses","classnames","name","sex","born","died","fatherName","motherName","onClick","type","NotFoundPage","App","path","element","replace","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fc715d5e.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport 'bulma/css/bulma.min.css';\nimport { Button } from 'react-bulma-components';\n\nexport const Navigation: React.FC = () => {\n  return (\n    <nav className=\"App__nav\">\n      <NavLink\n        to=\"/home\"\n        className={({ isActive }) => (isActive ? 'is-active' : '')}\n      >\n        <Button>Home</Button>\n      </NavLink>\n\n      <NavLink to=\"/table\">\n        <Button>People</Button>\n      </NavLink>\n    </nav>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Button, Loader } from 'react-bulma-components';\nimport classnames from 'classnames';\nimport { getUsers } from './api';\n\ninterface People {\n  name: string,\n  sex: string,\n  born: number,\n  died: number,\n  fatherName: string,\n  motherName: string,\n  slug: string,\n}\n\nexport const PeopleTable: React.FC = () => {\n  const [peopleList, getPeople] = useState<People[] | null>(null);\n  const [selectedPerson, getSelectedPerson] = useState<People | null>(null);\n  const [selectedPeople, getSelectedPeople] = useState<People[]>([]);\n  const [deletedPerson, getDeletedPerson] = useState<People | null>(null);\n  const [movedPerson, getMovedPerson] = useState<People | null>(null);\n  const [moveDirection, getMoveDirection] = useState('');\n\n  useEffect(() => {\n    setTimeout(() => getUsers()\n      .then(people => getPeople([...people])), 1000);\n  }, []);\n\n  useEffect(() => {\n    if (selectedPerson) {\n      const addPerson: boolean = selectedPeople.includes(selectedPerson);\n\n      if (!addPerson) {\n        getSelectedPeople(currentSelectedPeople => ([\n          ...currentSelectedPeople,\n          selectedPerson,\n        ]));\n\n        getSelectedPerson(null);\n      }\n\n      if (addPerson) {\n        const removedPerson = selectedPeople\n          .filter(person => person.slug !== selectedPerson.slug);\n\n        getSelectedPeople(removedPerson);\n        getSelectedPerson(null);\n      }\n    }\n  }, [selectedPerson]);\n\n  useEffect(() => {\n    const personsToDelete = peopleList?.filter(person => {\n      return person.slug !== deletedPerson?.slug;\n    });\n\n    getPeople(personsToDelete || null);\n  }, [deletedPerson]);\n\n  useEffect(() => {\n    const personToMoveIndex = peopleList?.findIndex(person => {\n      return person.slug === movedPerson?.slug;\n    });\n\n    switch (moveDirection) {\n      case 'up':\n        if (personToMoveIndex === 0) {\n          return;\n        }\n\n        if (typeof personToMoveIndex !== 'undefined' && peopleList) {\n          const newPeople = [...peopleList];\n          const personToMove = newPeople\n            .slice(personToMoveIndex - 1, personToMoveIndex);\n\n          newPeople.splice(personToMoveIndex - 1, 1);\n\n          getPeople(newPeople\n            .slice(0, personToMoveIndex)\n            .concat(...personToMove)\n            .concat(\n              newPeople\n                .slice(personToMoveIndex),\n            ));\n          getMovedPerson(null);\n        }\n\n        break;\n\n      case 'down':\n        if (!peopleList || personToMoveIndex === -1) {\n          return;\n        }\n\n        if (typeof personToMoveIndex !== 'undefined' && peopleList) {\n          const newPeople = [...peopleList];\n          const personToMove = newPeople.splice(personToMoveIndex, 1);\n\n          newPeople.splice(personToMoveIndex + 1, 0, ...personToMove);\n          getPeople(newPeople);\n          getMovedPerson(null);\n        }\n\n        break;\n\n      default:\n        break;\n    }\n  }, [movedPerson]);\n\n  return (\n    <>\n      {peopleList?.length\n\n        ? (\n          <div className=\"table-container\">\n            <table className=\"table is-hoverable\">\n              <thead>\n                <tr>\n                  <th><abbr title=\"name\">Name</abbr></th>\n                  <th><abbr title=\"sex\">Sex</abbr></th>\n                  <th><abbr title=\"born\">Born</abbr></th>\n                  <th><abbr title=\"died\">Died</abbr></th>\n                  <th><abbr title=\"Fathername\">Fathername</abbr></th>\n                  <th><abbr title=\"Mothername\">Mothername</abbr></th>\n                  <th>Select</th>\n                  <th>Move Up</th>\n                  <th>Move Down</th>\n                  <th>Delete</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {peopleList.map(person => {\n                  const isPersonSelected = selectedPeople.includes(person);\n                  const selectedPersonClasses = classnames({\n                    'is-selected': isPersonSelected,\n                  });\n\n                  return (\n                    <tr key={person.slug} className={selectedPersonClasses}>\n                      <th className={selectedPersonClasses}>{person.name}</th>\n                      <th>{person.sex}</th>\n                      <th>{person.born}</th>\n                      <th>{person.died}</th>\n                      <th>{person.fatherName}</th>\n                      <th>{person.motherName}</th>\n                      <th>\n                        <Button\n                          className={classnames(\n                            'is-success',\n                            { 'is-warning': isPersonSelected },\n                          )}\n                          onClick={() => getSelectedPerson(person)}\n                        >\n                          {`${!isPersonSelected\n                            ? 'Select'\n                            : 'Unselect'}`}\n                        </Button>\n                      </th>\n\n                      <th>\n                        <Button\n                          type=\"button\"\n                          onClick={() => {\n                            getMoveDirection('up');\n                            getMovedPerson(person);\n                          }}\n                        >\n                          Move Up\n                        </Button>\n                      </th>\n\n                      <th>\n                        <Button\n                          onClick={() => {\n                            getMoveDirection('down');\n                            getMovedPerson(person);\n                          }}\n                        >\n                          Move Down\n                        </Button>\n                      </th>\n\n                      <th>\n                        <Button\n                          className=\"is-danger\"\n                          onClick={() => getDeletedPerson(person)}\n                        >\n                          Delete\n                        </Button>\n                      </th>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        )\n        : <Loader />}\n    </>\n  );\n};\n","const BASE_URL = 'https://mate-academy.github.io/react_people-table/api/';\n\nexport const getUsers = () => {\n  return fetch(`${BASE_URL}/people.json`)\n    .then(response => response.json());\n};\n","export const NotFoundPage: React.FC = () => {\n  return (\n    <div className=\"App__not-found\">\n      <p className=\"App__not-text\">Page Not Found</p>\n    </div>\n  );\n};\n","import './App.scss';\nimport {\n  Route,\n  Routes,\n  Navigate,\n} from 'react-router-dom';\nimport { Navigation } from './components/Navigation';\nimport { PeopleTable } from './components/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage';\n\nconst App = () => (\n  <div className=\"App\">\n    <Navigation />\n\n    <Routes>\n      <Route\n        path=\"/\"\n        element={<h1>Home</h1>}\n      />\n\n      <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n      <Route\n        path=\"/table\"\n        element={<PeopleTable />}\n      />\n\n      <Route path=\"*\" element={<NotFoundPage />} />\n    </Routes>\n  </div>\n);\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}